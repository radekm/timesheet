// <auto-generated />
namespace Timesheet.Migrations

open System
open Microsoft.EntityFrameworkCore
open Microsoft.EntityFrameworkCore.Infrastructure
open Microsoft.EntityFrameworkCore.Metadata
open Microsoft.EntityFrameworkCore.Migrations
open Microsoft.EntityFrameworkCore.Storage.ValueConversion

[<DbContext(typeof<Db.TimesheetDbContext>)>]
[<Migration("20210623202151_Initial")>]
type Initial() =
    inherit Migration()

    override this.Up(migrationBuilder:MigrationBuilder) =
        migrationBuilder.CreateTable(
            name = "Channels"
            ,columns = (fun table -> 
            {|
                Id =
                    table.Column<string>(
                        nullable = false
                        ,``type`` = "TEXT"
                    )
                Name =
                    table.Column<string>(
                        nullable = true
                        ,``type`` = "TEXT"
                    )
                TeamName =
                    table.Column<string>(
                        nullable = true
                        ,``type`` = "TEXT"
                    )
                Json =
                    table.Column<string>(
                        nullable = true
                        ,``type`` = "TEXT"
                    )
                LastDownload =
                    table.Column<DateTimeOffset>(
                        nullable = false
                        ,``type`` = "TEXT"
                    )
            |})
            ,constraints =
                (fun table -> 
                    table.PrimaryKey("PK_Channels", (fun x -> (x.Id) :> obj)) |> ignore
                ) 
        ) |> ignore

        migrationBuilder.CreateTable(
            name = "Chats"
            ,columns = (fun table -> 
            {|
                Id =
                    table.Column<string>(
                        nullable = false
                        ,``type`` = "TEXT"
                    )
                Name =
                    table.Column<string>(
                        nullable = true
                        ,``type`` = "TEXT"
                    )
                Json =
                    table.Column<string>(
                        nullable = true
                        ,``type`` = "TEXT"
                    )
                LastDownload =
                    table.Column<DateTimeOffset>(
                        nullable = false
                        ,``type`` = "TEXT"
                    )
            |})
            ,constraints =
                (fun table -> 
                    table.PrimaryKey("PK_Chats", (fun x -> (x.Id) :> obj)) |> ignore
                ) 
        ) |> ignore

        migrationBuilder.CreateTable(
            name = "ChannelMessages"
            ,columns = (fun table -> 
            {|
                Id =
                    table.Column<string>(
                        nullable = false
                        ,``type`` = "TEXT"
                    )
                ChannelId =
                    table.Column<string>(
                        nullable = true
                        ,``type`` = "TEXT"
                    )
                Created =
                    table.Column<DateTimeOffset>(
                        nullable = false
                        ,``type`` = "TEXT"
                    )
                Json =
                    table.Column<string>(
                        nullable = true
                        ,``type`` = "TEXT"
                    )
            |})
            ,constraints =
                (fun table -> 
                    table.PrimaryKey("PK_ChannelMessages", (fun x -> (x.Id) :> obj)) |> ignore
                    table.ForeignKey(
                        name = "FK_ChannelMessages_Channels_ChannelId",
                        column = (fun x -> (x.ChannelId) :> obj)
                        ,principalTable = "Channels"
                        ,principalColumn = "Id"
                        ,onDelete = ReferentialAction.Restrict
                        ) |> ignore

                ) 
        ) |> ignore

        migrationBuilder.CreateTable(
            name = "ChatMessages"
            ,columns = (fun table -> 
            {|
                Id =
                    table.Column<string>(
                        nullable = false
                        ,``type`` = "TEXT"
                    )
                ChatId =
                    table.Column<string>(
                        nullable = true
                        ,``type`` = "TEXT"
                    )
                Created =
                    table.Column<DateTimeOffset>(
                        nullable = false
                        ,``type`` = "TEXT"
                    )
                Json =
                    table.Column<string>(
                        nullable = true
                        ,``type`` = "TEXT"
                    )
            |})
            ,constraints =
                (fun table -> 
                    table.PrimaryKey("PK_ChatMessages", (fun x -> (x.Id) :> obj)) |> ignore
                    table.ForeignKey(
                        name = "FK_ChatMessages_Chats_ChatId",
                        column = (fun x -> (x.ChatId) :> obj)
                        ,principalTable = "Chats"
                        ,principalColumn = "Id"
                        ,onDelete = ReferentialAction.Restrict
                        ) |> ignore

                ) 
        ) |> ignore

        migrationBuilder.CreateIndex(
            name = "IX_ChannelMessages_ChannelId"
            ,table = "ChannelMessages"
            ,column = "ChannelId"
            ) |> ignore

        migrationBuilder.CreateIndex(
            name = "IX_ChatMessages_ChatId"
            ,table = "ChatMessages"
            ,column = "ChatId"
            ) |> ignore


    override this.Down(migrationBuilder:MigrationBuilder) =
        migrationBuilder.DropTable(
            name = "ChannelMessages"
            ) |> ignore

        migrationBuilder.DropTable(
            name = "ChatMessages"
            ) |> ignore

        migrationBuilder.DropTable(
            name = "Channels"
            ) |> ignore

        migrationBuilder.DropTable(
            name = "Chats"
            ) |> ignore


    override this.BuildTargetModel(modelBuilder: ModelBuilder) =
        modelBuilder
            .HasAnnotation("ProductVersion", "5.0.7")
            |> ignore

        modelBuilder.Entity("Db+Channel", (fun b ->

            b.Property<string>("Id")
                .HasColumnType("TEXT") |> ignore
            b.Property<string>("Json")
                .HasColumnType("TEXT") |> ignore
            b.Property<DateTimeOffset>("LastDownload")
                .IsRequired()
                .HasColumnType("TEXT") |> ignore
            b.Property<string>("Name")
                .HasColumnType("TEXT") |> ignore
            b.Property<string>("TeamName")
                .HasColumnType("TEXT") |> ignore

            b.HasKey("Id") |> ignore

            b.ToTable("Channels") |> ignore

        )) |> ignore

        modelBuilder.Entity("Db+ChannelMessage", (fun b ->

            b.Property<string>("Id")
                .HasColumnType("TEXT") |> ignore
            b.Property<string>("ChannelId")
                .HasColumnType("TEXT") |> ignore
            b.Property<DateTimeOffset>("Created")
                .IsRequired()
                .HasColumnType("TEXT") |> ignore
            b.Property<string>("Json")
                .HasColumnType("TEXT") |> ignore

            b.HasKey("Id") |> ignore


            b.HasIndex("ChannelId") |> ignore

            b.ToTable("ChannelMessages") |> ignore

        )) |> ignore

        modelBuilder.Entity("Db+Chat", (fun b ->

            b.Property<string>("Id")
                .HasColumnType("TEXT") |> ignore
            b.Property<string>("Json")
                .HasColumnType("TEXT") |> ignore
            b.Property<DateTimeOffset>("LastDownload")
                .IsRequired()
                .HasColumnType("TEXT") |> ignore
            b.Property<string>("Name")
                .HasColumnType("TEXT") |> ignore

            b.HasKey("Id") |> ignore

            b.ToTable("Chats") |> ignore

        )) |> ignore

        modelBuilder.Entity("Db+ChatMessage", (fun b ->

            b.Property<string>("Id")
                .HasColumnType("TEXT") |> ignore
            b.Property<string>("ChatId")
                .HasColumnType("TEXT") |> ignore
            b.Property<DateTimeOffset>("Created")
                .IsRequired()
                .HasColumnType("TEXT") |> ignore
            b.Property<string>("Json")
                .HasColumnType("TEXT") |> ignore

            b.HasKey("Id") |> ignore


            b.HasIndex("ChatId") |> ignore

            b.ToTable("ChatMessages") |> ignore

        )) |> ignore

        modelBuilder.Entity("Db+ChannelMessage", (fun b ->
            b.HasOne("Db+Channel",null)
                .WithMany("Messages")
                .HasForeignKey("ChannelId") |> ignore
        )) |> ignore

        modelBuilder.Entity("Db+ChatMessage", (fun b ->
            b.HasOne("Db+Chat",null)
                .WithMany("Messages")
                .HasForeignKey("ChatId") |> ignore
        )) |> ignore

