// <auto-generated />
namespace Timesheet.Migrations

open System
open Microsoft.EntityFrameworkCore
open Microsoft.EntityFrameworkCore.Infrastructure
open Microsoft.EntityFrameworkCore.Metadata
open Microsoft.EntityFrameworkCore.Migrations
open Microsoft.EntityFrameworkCore.Storage.ValueConversion

[<DbContext(typeof<Db.TimesheetDbContext>)>]
[<Migration("20210624123601_PrimaryKeyOfMessagesContainsChannelIdRespChatId")>]
type PrimaryKeyOfMessagesContainsChannelIdRespChatId() =
    inherit Migration()

    override this.Up(migrationBuilder:MigrationBuilder) =
        migrationBuilder.DropForeignKey(
            name = "FK_ChannelMessages_Channels_ChannelId"
            ,table = "ChannelMessages"
            ) |> ignore

        migrationBuilder.DropForeignKey(
            name = "FK_ChatMessages_Chats_ChatId"
            ,table = "ChatMessages"
            ) |> ignore

        migrationBuilder.DropPrimaryKey(
            name = "PK_ChatMessages"
            ,table = "ChatMessages"
            ) |> ignore

        migrationBuilder.DropIndex(
            name = "IX_ChatMessages_ChatId"
            ,table = "ChatMessages"
            ) |> ignore

        migrationBuilder.DropPrimaryKey(
            name = "PK_ChannelMessages"
            ,table = "ChannelMessages"
            ) |> ignore

        migrationBuilder.DropIndex(
            name = "IX_ChannelMessages_ChannelId"
            ,table = "ChannelMessages"
            ) |> ignore

        migrationBuilder.AlterColumn<string>(
            name = "ChatId"
            ,table = "ChatMessages"
            ,``type`` = "TEXT"
            ,nullable = false
            ,defaultValue = ""
            ,oldClrType = typedefof<string>
            ,oldType = "TEXT"
            ,oldNullable = true
            ) |> ignore

        migrationBuilder.AlterColumn<string>(
            name = "ChannelId"
            ,table = "ChannelMessages"
            ,``type`` = "TEXT"
            ,nullable = false
            ,defaultValue = ""
            ,oldClrType = typedefof<string>
            ,oldType = "TEXT"
            ,oldNullable = true
            ) |> ignore

        migrationBuilder.AddPrimaryKey(
            name = "PK_ChatMessages"
            ,table = "ChatMessages"
            ,columns = [| "ChatId"; "Id" |]
        ) |> ignore

        migrationBuilder.AddPrimaryKey(
            name = "PK_ChannelMessages"
            ,table = "ChannelMessages"
            ,columns = [| "ChannelId"; "Id" |]
        ) |> ignore

        migrationBuilder.AddForeignKey(
            name = "FK_ChannelMessages_Channels_ChannelId"
            ,table = "ChannelMessages"
            ,column = "ChannelId"
            ,principalTable = "Channels"
            ,principalColumn = "Id"
            ,onDelete = ReferentialAction.Cascade
        ) |> ignore

        migrationBuilder.AddForeignKey(
            name = "FK_ChatMessages_Chats_ChatId"
            ,table = "ChatMessages"
            ,column = "ChatId"
            ,principalTable = "Chats"
            ,principalColumn = "Id"
            ,onDelete = ReferentialAction.Cascade
        ) |> ignore


    override this.Down(migrationBuilder:MigrationBuilder) =
        migrationBuilder.DropForeignKey(
            name = "FK_ChannelMessages_Channels_ChannelId"
            ,table = "ChannelMessages"
            ) |> ignore

        migrationBuilder.DropForeignKey(
            name = "FK_ChatMessages_Chats_ChatId"
            ,table = "ChatMessages"
            ) |> ignore

        migrationBuilder.DropPrimaryKey(
            name = "PK_ChatMessages"
            ,table = "ChatMessages"
            ) |> ignore

        migrationBuilder.DropPrimaryKey(
            name = "PK_ChannelMessages"
            ,table = "ChannelMessages"
            ) |> ignore

        migrationBuilder.AlterColumn<string>(
            name = "ChatId"
            ,table = "ChatMessages"
            ,``type`` = "TEXT"
            ,nullable = true
            ,oldClrType = typedefof<string>
            ,oldType = "TEXT"
            ,oldNullable = false
            ) |> ignore

        migrationBuilder.AlterColumn<string>(
            name = "ChannelId"
            ,table = "ChannelMessages"
            ,``type`` = "TEXT"
            ,nullable = true
            ,oldClrType = typedefof<string>
            ,oldType = "TEXT"
            ,oldNullable = false
            ) |> ignore

        migrationBuilder.AddPrimaryKey(
            name = "PK_ChatMessages"
            ,table = "ChatMessages"
            ,column = "Id"
        ) |> ignore

        migrationBuilder.AddPrimaryKey(
            name = "PK_ChannelMessages"
            ,table = "ChannelMessages"
            ,column = "Id"
        ) |> ignore

        migrationBuilder.CreateIndex(
            name = "IX_ChatMessages_ChatId"
            ,table = "ChatMessages"
            ,column = "ChatId"
            ) |> ignore

        migrationBuilder.CreateIndex(
            name = "IX_ChannelMessages_ChannelId"
            ,table = "ChannelMessages"
            ,column = "ChannelId"
            ) |> ignore

        migrationBuilder.AddForeignKey(
            name = "FK_ChannelMessages_Channels_ChannelId"
            ,table = "ChannelMessages"
            ,column = "ChannelId"
            ,principalTable = "Channels"
            ,principalColumn = "Id"
            ,onDelete = ReferentialAction.Restrict
        ) |> ignore

        migrationBuilder.AddForeignKey(
            name = "FK_ChatMessages_Chats_ChatId"
            ,table = "ChatMessages"
            ,column = "ChatId"
            ,principalTable = "Chats"
            ,principalColumn = "Id"
            ,onDelete = ReferentialAction.Restrict
        ) |> ignore


    override this.BuildTargetModel(modelBuilder: ModelBuilder) =
        modelBuilder
            .HasAnnotation("ProductVersion", "5.0.7")
            |> ignore

        modelBuilder.Entity("Db+Channel", (fun b ->

            b.Property<string>("Id")
                .HasColumnType("TEXT") |> ignore
            b.Property<string>("Json")
                .HasColumnType("TEXT") |> ignore
            b.Property<DateTimeOffset>("LastDownload")
                .IsRequired()
                .HasColumnType("TEXT") |> ignore
            b.Property<string>("Name")
                .HasColumnType("TEXT") |> ignore
            b.Property<string>("TeamName")
                .HasColumnType("TEXT") |> ignore

            b.HasKey("Id") |> ignore

            b.ToTable("Channels") |> ignore

        )) |> ignore

        modelBuilder.Entity("Db+ChannelMessage", (fun b ->

            b.Property<string>("ChannelId")
                .HasColumnType("TEXT") |> ignore
            b.Property<string>("Id")
                .HasColumnType("TEXT") |> ignore
            b.Property<DateTimeOffset>("Created")
                .IsRequired()
                .HasColumnType("TEXT") |> ignore
            b.Property<string>("Json")
                .HasColumnType("TEXT") |> ignore

            b.HasKey("ChannelId", "Id") |> ignore

            b.ToTable("ChannelMessages") |> ignore

        )) |> ignore

        modelBuilder.Entity("Db+Chat", (fun b ->

            b.Property<string>("Id")
                .HasColumnType("TEXT") |> ignore
            b.Property<string>("Json")
                .HasColumnType("TEXT") |> ignore
            b.Property<DateTimeOffset>("LastDownload")
                .IsRequired()
                .HasColumnType("TEXT") |> ignore
            b.Property<string>("Name")
                .HasColumnType("TEXT") |> ignore

            b.HasKey("Id") |> ignore

            b.ToTable("Chats") |> ignore

        )) |> ignore

        modelBuilder.Entity("Db+ChatMessage", (fun b ->

            b.Property<string>("ChatId")
                .HasColumnType("TEXT") |> ignore
            b.Property<string>("Id")
                .HasColumnType("TEXT") |> ignore
            b.Property<DateTimeOffset>("Created")
                .IsRequired()
                .HasColumnType("TEXT") |> ignore
            b.Property<string>("Json")
                .HasColumnType("TEXT") |> ignore

            b.HasKey("ChatId", "Id") |> ignore

            b.ToTable("ChatMessages") |> ignore

        )) |> ignore

        modelBuilder.Entity("Db+ChannelMessage", (fun b ->
            b.HasOne("Db+Channel",null)
                .WithMany("Messages")
                .HasForeignKey("ChannelId")
                .OnDelete(DeleteBehavior.Cascade)
                .IsRequired() |> ignore
        )) |> ignore

        modelBuilder.Entity("Db+ChatMessage", (fun b ->
            b.HasOne("Db+Chat",null)
                .WithMany("Messages")
                .HasForeignKey("ChatId")
                .OnDelete(DeleteBehavior.Cascade)
                .IsRequired() |> ignore
        )) |> ignore

